project_name: uor-client-go

env:
- GO111MODULE=on
- COSIGN_EXPERIMENTAL=true

before:
  hooks:
    - go mod tidy
    - go mod vendor
builds:
  -
    binary: uor-client-go-{{ .Os }}-{{ .Arch }}
    no_unique_dist_dir: true
    main: ./cmd/client
    flags:
      - -trimpath
    mod_timestamp: "{{ .CommitTimestamp }}"
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
      - arm
      - s390x
      - ppc64le
    goarm:
      - "7"
    ignore:
      - goos: windows
        goarch: arm64
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: s390x
      - goos: windows
        goarch: ppc64le
      - goos: darwin
        goarch: arm
      - goos: darwin
        goarch: s390x
      - goos: darwin
        goarch: ppc64le
    ldflags:
      - "-X github.com/uor-framework/uor-client-go/cli.version={{ .Tag }}"
      - "-X github.com/uor-framework/uor-client-go/cli.commit={{ .ShortCommit }}"
      - "-X github.com/uor-framework/uor-client-go/cli.buildDate={{ .Date }}"
    env:
      - CGO_ENABLED=0
  
signs:
- id: uor-client-go-keyless
  signature: "${artifact}.sig"
  certificate: "${artifact}.pem"
  env:
  - COSIGN_EXPERIMENTAL=1
  cmd: cosign
  args:
    - sign-blob
    - "--output-certificate=${certificate}"
    - "--output-signature=${signature}"
    - "${artifact}"
  artifacts: binary
  output: true

archives:
  - format: binary
    name_template: "{{ .Binary }}"
    allow_different_binary_count: true
    replacements:
      linux: Linux
      darwin: Darwin
      windows: Windows
      amd64: x86_64

sboms:
- artifacts: binary

dockers:
  - id: arm64 
    goos: linux
    goarch: arm64
    dockerfile: Containerfile
    image_templates: 
      - ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64
    use: buildx
    build_flag_templates:
    - --platform=linux/arm64
    - --label=org.opencontainers.image.title={{ .ProjectName }}
    - --label=org.opencontainers.image.description={{ .ProjectName }}
    - --label=org.opencontainers.image.url=https://github.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}
    - --label=org.opencontainers.image.source=https://github.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}
    - --label=org.opencontainers.image.version={{ .Tag }}
    - --label=org.opencontainers.image.created={{ .Date }}
    - --label=org.opencontainers.image.revision={{ .FullCommit }}
    - --label=org.opencontainers.image.licenses=APACHE2.0
  - id: amd64 
    use: buildx
    goos: linux
    goarch: amd64
    dockerfile: Containerfile
    image_templates: 
      - ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64
    build_flag_templates:
    - --platform=linux/amd64
    - --label=org.opencontainers.image.title={{ .ProjectName }}
    - --label=org.opencontainers.image.description={{ .ProjectName }}
    - --label=org.opencontainers.image.url=https://github.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}
    - --label=org.opencontainers.image.source=https://github.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}
    - --label=org.opencontainers.image.version={{ .Tag }}
    - --label=org.opencontainers.image.created={{ .Date }}
    - --label=org.opencontainers.image.revision={{ .FullCommit }}
    - --label=org.opencontainers.image.licenses=APACHE2.0

docker_manifests:
  - name_template: ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/uor-client-go:{{ .Tag }}
    image_templates:
      - ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/uor-client-go:{{ .Tag }}-amd64
      - ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/uor-client-go:{{ .Tag }}-arm64
  - name_template: ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/uor-client-go:latest
    image_templates:
      - ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/uor-client-go:{{ .Tag }}-amd64
      - ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/uor-client-go:{{ .Tag }}-arm64

docker_signs:
- cmd: cosign
  artifacts: manifests
  output: true
  env:
  - COSIGN_EXPERIMENTAL=1
  args:
  - 'sign'
  - '${artifact}'

checksum:
  name_template: 'checksums.txt'

changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
    - Merge pull request
    - Merge branch
    - go mod tidy

snapshot:
  name_template: SNAPSHOT-{{ .ShortCommit }}

release:
  draft: true
  prerelease: allow
  github:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: uor-client-go
  name_template: "{{.ProjectName}}-{{ .Tag }}"
  header: |

    ## UOR Go Client {{ .Version }}

  footer: |

    ### Thank you to all contributors!
